const{stringifyRequest:stringifyRequest}=require("loader-utils"),crypto=require("crypto");module.exports=(()=>{}),module.exports.pitch=(t=>{this.cacheable&&this.cacheable();let e=t.split("!/");e=e[e.length-1],e=`s${e=crypto.createHash("md5").update(e).digest("base64").replace(/[^a-z0-9]/gi,"").substr(0,4)}`;const s=require.resolve("./insert-css.js");return`\n\t\tvar css = require(${stringifyRequest(this,`!!${t}`)});\n\t\tvar id = ${stringifyRequest(this,`${e}`)};\n\t\tvar insertCss = require(${stringifyRequest(this,`!!${s}`)});\n\t\t\n\t\texports = module.exports = css.locals || {};\n\t\texports._insertCss = function() { return insertCss(css) };\n\t\texports._toString = css.toString;\n\t\texports._module_id = id\n\t\t\n\t\t// Hot Module Replacement\n    \t// https://webpack.github.io/docs/hot-module-replacement\n    \t// Only activated in browser context\n    \tif (module.hot && typeof window !== 'undefined' && window.document) {\n      \t\tvar removeCss = function() {};\n      \t\tmodule.hot.accept(${stringifyRequest(this,`!!${t}`)}, function(){\n      \t\t\tcss = require(${stringifyRequest(this,`!!${t}`)});\n      \t\t\tremoveCss = insertCss(css);\n      \t\t});\n      \t\tmodule.hot.dispose(function () { removeCss(); })\n      \t}\t\n\t`});
